{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\datej\\\\OneDrive\\\\Desktop\\\\zavrsni\\\\DEX-ETH\\\\src\\\\components\\\\Curve.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Curve = props => {\n  _s();\n\n  let ref = useRef();\n  useEffect(() => {\n    let canvas = ref.current;\n    const textSize = 16;\n    const width = canvas.width;\n    const height = canvas.height;\n\n    if (canvas.getContext && props.ethReserve && props.tokenReserve) {\n      const k = props.ethReserve * props.tokenReserve;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, width, height);\n      let maxX = k / (props.ethReserve / 4);\n      let minX = 0;\n\n      if (props.addingEth || props.addingToken) {\n        maxX = k / (props.ethReserve * 0.4); //maxX = k/(props.ethReserve*0.8)\n\n        minX = k / Math.max(0, 500 - props.ethReserve);\n      }\n\n      const maxY = maxX * height / width;\n      const minY = minX * height / width;\n\n      const plotX = x => {\n        return (x - minX) / (maxX - minX) * width;\n      };\n\n      const plotY = y => {\n        return height - (y - minY) / (maxY - minY) * height;\n      };\n\n      ctx.strokeStyle = \"#000000\";\n      ctx.fillStyle = \"#000000\";\n      ctx.font = textSize + \"px Arial\"; // +Y axis\n\n      ctx.beginPath();\n      ctx.moveTo(plotX(minX), plotY(0));\n      ctx.lineTo(plotX(minX), plotY(maxY));\n      ctx.stroke(); // +X axis\n\n      ctx.beginPath();\n      ctx.moveTo(plotX(0), plotY(minY));\n      ctx.lineTo(plotX(maxX), plotY(minY));\n      ctx.stroke();\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      let first = true;\n\n      for (var x = minX; x <= maxX; x += maxX / width) {\n        /////\n        var y = k / x; /////\n\n        if (first) {\n          ctx.moveTo(plotX(x), plotY(y));\n          first = false;\n        } else {\n          ctx.lineTo(plotX(x), plotY(y));\n        }\n      }\n\n      ctx.stroke();\n      ctx.lineWidth = 1;\n\n      if (props.addingEth) {\n        let newEthReserve = props.ethReserve + parseFloat(props.addingEth);\n        ctx.fillStyle = \"#bbbbbb\";\n        ctx.beginPath();\n        ctx.arc(plotX(newEthReserve), plotY(k / newEthReserve), 5, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.strokeStyle = \"#009900\";\n        drawArrow(ctx, plotX(props.ethReserve), plotY(props.tokenReserve), plotX(newEthReserve), plotY(props.tokenReserve));\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"\" + props.addingEth + \" ETH input\", plotX(props.ethReserve) + textSize, plotY(props.tokenReserve) - textSize);\n        ctx.strokeStyle = \"#990000\";\n        drawArrow(ctx, plotX(newEthReserve), plotY(props.tokenReserve), plotX(newEthReserve), plotY(k / newEthReserve));\n        let amountGained = Math.round(10000 * (props.addingEth * props.tokenReserve) / newEthReserve) / 10000;\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"\" + amountGained + \" FESB output (-1% fee)\", plotX(newEthReserve) + textSize, plotY(k / newEthReserve));\n      } else if (props.addingToken) {\n        let newTokenReserve = props.tokenReserve + parseFloat(props.addingToken);\n        ctx.fillStyle = \"#bbbbbb\";\n        ctx.beginPath();\n        ctx.arc(plotX(k / newTokenReserve), plotY(newTokenReserve), 5, 0, 2 * Math.PI);\n        ctx.fill(); //console.log(\"newTokenReserve\",newTokenReserve)\n\n        ctx.strokeStyle = \"#990000\";\n        drawArrow(ctx, plotX(props.ethReserve), plotY(props.tokenReserve), plotX(props.ethReserve), plotY(newTokenReserve));\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"\" + props.addingToken + \" FESB input\", plotX(props.ethReserve) + textSize, plotY(props.tokenReserve));\n        ctx.strokeStyle = \"#009900\";\n        drawArrow(ctx, plotX(props.ethReserve), plotY(newTokenReserve), plotX(k / newTokenReserve), plotY(newTokenReserve));\n        let amountGained = Math.round(10000 * (props.addingToken * props.ethReserve) / newTokenReserve) / 10000; //console.log(\"amountGained\",amountGained)\n\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(\"\" + amountGained + \" ETH output (-0.3% fee)\", plotX(k / newTokenReserve) + textSize, plotY(newTokenReserve) - textSize);\n      }\n\n      ctx.fillStyle = \"#0000FF\";\n      ctx.beginPath();\n      ctx.arc(plotX(props.ethReserve), plotY(props.tokenReserve), 5, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 32,\n      position: 'relative',\n      width: props.width,\n      height: props.height\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0\n      },\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: \"20%\",\n        bottom: -20\n      },\n      children: \"-- ETH Reserve --\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        left: -20,\n        bottom: \"20%\",\n        transform: \"rotate(-90deg)\",\n        transformOrigin: \"0 0\"\n      },\n      children: \"-- Token Reserve --\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Curve, \"8uVE59eA/r6b92xF80p7sH8rXLk=\");\n\n_c = Curve;\nexport default Curve;\n\nconst drawArrow = (ctx, x1, y1, x2, y2) => {\n  let [dx, dy] = [x1 - x2, y1 - y2];\n  let norm = Math.sqrt(dx * dx + dy * dy);\n  let [udx, udy] = [dx / norm, dy / norm];\n  const size = norm / 7;\n  ctx.beginPath();\n  ctx.moveTo(x1, y1);\n  ctx.lineTo(x2, y2);\n  ctx.stroke();\n  ctx.moveTo(x2, y2);\n  ctx.lineTo(x2 + udx * size - udy * size, y2 + udx * size + udy * size);\n  ctx.moveTo(x2, y2);\n  ctx.lineTo(x2 + udx * size + udy * size, y2 - udx * size + udy * size);\n  ctx.stroke();\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Curve\");","map":{"version":3,"sources":["C:/Users/datej/OneDrive/Desktop/zavrsni/DEX-ETH/src/components/Curve.js"],"names":["React","useRef","useEffect","Curve","props","ref","canvas","current","textSize","width","height","getContext","ethReserve","tokenReserve","k","ctx","clearRect","maxX","minX","addingEth","addingToken","Math","max","maxY","minY","plotX","x","plotY","y","strokeStyle","fillStyle","font","beginPath","moveTo","lineTo","stroke","lineWidth","first","newEthReserve","parseFloat","arc","PI","fill","drawArrow","fillText","amountGained","round","newTokenReserve","margin","position","left","top","bottom","transform","transformOrigin","x1","y1","x2","y2","dx","dy","norm","sqrt","udx","udy","size"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\n\r\nconst Curve = (props) => {\r\n  let ref = useRef();\r\n\r\n  useEffect(() => {\r\n    let canvas = ref.current;\r\n\r\n    const textSize = 16\r\n\r\n    const width = canvas.width ;\r\n    const height = canvas.height ;\r\n\r\n    if (canvas.getContext && props.ethReserve && props.tokenReserve) {\r\n\r\n      const k = props.ethReserve * props.tokenReserve\r\n\r\n      const ctx = canvas.getContext('2d');\r\n      ctx.clearRect(0,0,width,height);\r\n\r\n      let maxX = k/(props.ethReserve/4)\r\n      let minX = 0\r\n\r\n      if(props.addingEth||props.addingToken){\r\n        maxX = k/(props.ethReserve*0.4)\r\n        //maxX = k/(props.ethReserve*0.8)\r\n        minX = k/Math.max(0,(500-props.ethReserve))\r\n      }\r\n\r\n      const maxY = maxX * height / width;\r\n      const minY = minX * height / width;\r\n\r\n      const plotX = (x)=>{\r\n        return (x - minX) / (maxX - minX) * width ;\r\n      }\r\n\r\n      const plotY = (y)=>{\r\n        return height - (y - minY) / (maxY - minY) * height ;\r\n      }\r\n      ctx.strokeStyle = \"#000000\";\r\n      ctx.fillStyle = \"#000000\";\r\n      ctx.font = textSize+\"px Arial\";\r\n      // +Y axis\r\n      ctx.beginPath() ;\r\n      ctx.moveTo(plotX(minX),plotY(0)) ;\r\n      ctx.lineTo(plotX(minX),plotY(maxY)) ;\r\n      ctx.stroke() ;\r\n      // +X axis\r\n      ctx.beginPath() ;\r\n      ctx.moveTo(plotX(0),plotY(minY)) ;\r\n      ctx.lineTo(plotX(maxX),plotY(minY)) ;\r\n      ctx.stroke() ;\r\n\r\n      ctx.lineWidth = 2 ;\r\n      ctx.beginPath() ;\r\n      let first = true\r\n      for (var x = minX; x <= maxX; x += maxX/width) {\r\n        /////\r\n        var y = k / x\r\n        /////\r\n        if (first) {\r\n          ctx.moveTo(plotX(x),plotY(y))\r\n          first = false\r\n        } else {\r\n          ctx.lineTo(plotX(x),plotY(y))\r\n        }\r\n      }\r\n      ctx.stroke() ;\r\n\r\n      ctx.lineWidth = 1 ;\r\n\r\n      if(props.addingEth){\r\n\r\n        let newEthReserve = props.ethReserve + parseFloat(props.addingEth)\r\n\r\n        ctx.fillStyle = \"#bbbbbb\";\r\n        ctx.beginPath();\r\n        ctx.arc(plotX(newEthReserve),plotY(k/(newEthReserve)), 5, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n        ctx.strokeStyle = \"#009900\";\r\n        drawArrow(ctx,plotX(props.ethReserve),plotY(props.tokenReserve),plotX(newEthReserve),plotY(props.tokenReserve))\r\n\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(\"\"+props.addingEth+\" ETH input\", plotX(props.ethReserve)+textSize, plotY(props.tokenReserve)-textSize);\r\n\r\n        ctx.strokeStyle = \"#990000\";\r\n        drawArrow(ctx,plotX(newEthReserve),plotY(props.tokenReserve),plotX(newEthReserve),plotY(k/(newEthReserve)))\r\n\r\n        let amountGained =  Math.round(10000 * ( props.addingEth * props.tokenReserve ) / ( newEthReserve ) ) /10000\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(\"\"+(amountGained)+\" FESB output (-1% fee)\", plotX(newEthReserve)+textSize,plotY(k/(newEthReserve)));\r\n\r\n      }else if(props.addingToken){\r\n\r\n        let newTokenReserve = props.tokenReserve + parseFloat(props.addingToken)\r\n\r\n        ctx.fillStyle = \"#bbbbbb\";\r\n        ctx.beginPath();\r\n        ctx.arc(plotX(k/(newTokenReserve)),plotY(newTokenReserve), 5, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n        //console.log(\"newTokenReserve\",newTokenReserve)\r\n        ctx.strokeStyle = \"#990000\";\r\n        drawArrow(ctx,plotX(props.ethReserve),plotY(props.tokenReserve),plotX(props.ethReserve),plotY(newTokenReserve))\r\n\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(\"\"+(props.addingToken)+\" FESB input\", plotX(props.ethReserve)+textSize,plotY(props.tokenReserve));\r\n\r\n        ctx.strokeStyle = \"#009900\";\r\n        drawArrow(ctx,plotX(props.ethReserve),plotY(newTokenReserve),plotX(k/(newTokenReserve)),plotY(newTokenReserve))\r\n\r\n        let amountGained =  Math.round(10000 * ( props.addingToken * props.ethReserve ) / ( newTokenReserve ) ) /10000\r\n        //console.log(\"amountGained\",amountGained)\r\n        ctx.fillStyle = \"#000000\";\r\n        ctx.fillText(\"\"+amountGained+\" ETH output (-0.3% fee)\", plotX(k/(newTokenReserve))+textSize,plotY(newTokenReserve)-textSize);\r\n\r\n      }\r\n\r\n      ctx.fillStyle = \"#0000FF\"\r\n      ctx.beginPath();\r\n      ctx.arc(plotX(props.ethReserve),plotY(props.tokenReserve), 5, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n\r\n    }\r\n  },[props]);\r\n\r\n\r\n  return (\r\n    <div style={{margin:32,position:'relative',width:props.width,height:props.height}}>\r\n      <canvas\r\n        style={{position:'absolute',left:0,top:0}}\r\n        ref={ref}\r\n        \r\n      />\r\n      <div style={{position:'absolute',left:\"20%\",bottom:-20}}>\r\n        -- ETH Reserve --\r\n      </div>\r\n      <div style={{position:'absolute',left:-20,bottom:\"20%\",transform:\"rotate(-90deg)\",transformOrigin:\"0 0\"}}>\r\n        -- Token Reserve --\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Curve;\r\n\r\n\r\nconst drawArrow = (ctx,x1,y1,x2,y2)=>{\r\n  let [dx,dy] = [x1-x2, y1-y2]\r\n  let norm = Math.sqrt(dx * dx + dy * dy)\r\n  let [udx, udy] = [dx/norm, dy/norm]\r\n  const size = norm/7\r\n  ctx.beginPath();\r\n  ctx.moveTo(x1,y1) ;\r\n  ctx.lineTo(x2,y2) ;\r\n  ctx.stroke() ;\r\n  ctx.moveTo(x2,y2) ;\r\n  ctx.lineTo(x2 + udx*size - udy*size,y2 + udx*size + udy*size ) ;\r\n  ctx.moveTo(x2,y2) ;\r\n  ctx.lineTo(x2 + udx*size +udy*size ,y2 - udx*size + udy*size) ;\r\n  ctx.stroke() ;\r\n}"]},"metadata":{},"sourceType":"module"}